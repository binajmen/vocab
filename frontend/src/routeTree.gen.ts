/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerbImport } from './routes/verb'
import { Route as HelloImport } from './routes/hello'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ConsoleUsersImport } from './routes/console/users'
import { Route as ConsoleUsersIndexImport } from './routes/console/users/index'
import { Route as ConsoleUsersCreateImport } from './routes/console/users/create'
import { Route as ConsoleUsersUseridImport } from './routes/console/users/$user_id'

// Create/Update Routes

const VerbRoute = VerbImport.update({
  id: '/verb',
  path: '/verb',
  getParentRoute: () => rootRoute,
} as any)

const HelloRoute = HelloImport.update({
  id: '/hello',
  path: '/hello',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ConsoleUsersRoute = ConsoleUsersImport.update({
  id: '/console/users',
  path: '/console/users',
  getParentRoute: () => rootRoute,
} as any)

const ConsoleUsersIndexRoute = ConsoleUsersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ConsoleUsersRoute,
} as any)

const ConsoleUsersCreateRoute = ConsoleUsersCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => ConsoleUsersRoute,
} as any)

const ConsoleUsersUseridRoute = ConsoleUsersUseridImport.update({
  id: '/$user_id',
  path: '/$user_id',
  getParentRoute: () => ConsoleUsersRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/hello': {
      id: '/hello'
      path: '/hello'
      fullPath: '/hello'
      preLoaderRoute: typeof HelloImport
      parentRoute: typeof rootRoute
    }
    '/verb': {
      id: '/verb'
      path: '/verb'
      fullPath: '/verb'
      preLoaderRoute: typeof VerbImport
      parentRoute: typeof rootRoute
    }
    '/console/users': {
      id: '/console/users'
      path: '/console/users'
      fullPath: '/console/users'
      preLoaderRoute: typeof ConsoleUsersImport
      parentRoute: typeof rootRoute
    }
    '/console/users/$user_id': {
      id: '/console/users/$user_id'
      path: '/$user_id'
      fullPath: '/console/users/$user_id'
      preLoaderRoute: typeof ConsoleUsersUseridImport
      parentRoute: typeof ConsoleUsersImport
    }
    '/console/users/create': {
      id: '/console/users/create'
      path: '/create'
      fullPath: '/console/users/create'
      preLoaderRoute: typeof ConsoleUsersCreateImport
      parentRoute: typeof ConsoleUsersImport
    }
    '/console/users/': {
      id: '/console/users/'
      path: '/'
      fullPath: '/console/users/'
      preLoaderRoute: typeof ConsoleUsersIndexImport
      parentRoute: typeof ConsoleUsersImport
    }
  }
}

// Create and export the route tree

interface ConsoleUsersRouteChildren {
  ConsoleUsersUseridRoute: typeof ConsoleUsersUseridRoute
  ConsoleUsersCreateRoute: typeof ConsoleUsersCreateRoute
  ConsoleUsersIndexRoute: typeof ConsoleUsersIndexRoute
}

const ConsoleUsersRouteChildren: ConsoleUsersRouteChildren = {
  ConsoleUsersUseridRoute: ConsoleUsersUseridRoute,
  ConsoleUsersCreateRoute: ConsoleUsersCreateRoute,
  ConsoleUsersIndexRoute: ConsoleUsersIndexRoute,
}

const ConsoleUsersRouteWithChildren = ConsoleUsersRoute._addFileChildren(
  ConsoleUsersRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/hello': typeof HelloRoute
  '/verb': typeof VerbRoute
  '/console/users': typeof ConsoleUsersRouteWithChildren
  '/console/users/$user_id': typeof ConsoleUsersUseridRoute
  '/console/users/create': typeof ConsoleUsersCreateRoute
  '/console/users/': typeof ConsoleUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/hello': typeof HelloRoute
  '/verb': typeof VerbRoute
  '/console/users/$user_id': typeof ConsoleUsersUseridRoute
  '/console/users/create': typeof ConsoleUsersCreateRoute
  '/console/users': typeof ConsoleUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/hello': typeof HelloRoute
  '/verb': typeof VerbRoute
  '/console/users': typeof ConsoleUsersRouteWithChildren
  '/console/users/$user_id': typeof ConsoleUsersUseridRoute
  '/console/users/create': typeof ConsoleUsersCreateRoute
  '/console/users/': typeof ConsoleUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/hello'
    | '/verb'
    | '/console/users'
    | '/console/users/$user_id'
    | '/console/users/create'
    | '/console/users/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/hello'
    | '/verb'
    | '/console/users/$user_id'
    | '/console/users/create'
    | '/console/users'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/hello'
    | '/verb'
    | '/console/users'
    | '/console/users/$user_id'
    | '/console/users/create'
    | '/console/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  HelloRoute: typeof HelloRoute
  VerbRoute: typeof VerbRoute
  ConsoleUsersRoute: typeof ConsoleUsersRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  HelloRoute: HelloRoute,
  VerbRoute: VerbRoute,
  ConsoleUsersRoute: ConsoleUsersRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/hello",
        "/verb",
        "/console/users"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/hello": {
      "filePath": "hello.tsx"
    },
    "/verb": {
      "filePath": "verb.tsx"
    },
    "/console/users": {
      "filePath": "console/users.tsx",
      "children": [
        "/console/users/$user_id",
        "/console/users/create",
        "/console/users/"
      ]
    },
    "/console/users/$user_id": {
      "filePath": "console/users/$user_id.tsx",
      "parent": "/console/users"
    },
    "/console/users/create": {
      "filePath": "console/users/create.tsx",
      "parent": "/console/users"
    },
    "/console/users/": {
      "filePath": "console/users/index.tsx",
      "parent": "/console/users"
    }
  }
}
ROUTE_MANIFEST_END */
